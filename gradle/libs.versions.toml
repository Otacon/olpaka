[versions]
agp = "8.6.1"
android-compileSdk = "34"
androidx-lifecycle = "2.8.3"
androidx-navigation = "2.8.0-alpha10"
bugsnag = "3.+"
buildKonfig = "0.15.2"
compose-plugin = "1.7.0"
coroutines = "1.9.0"
conveyor = "1.1"
conveyor-plugin = "1.10"
koin-compose = "1.2.0-Beta5"
kotlin = "2.0.21"
kotlinx-datetime = "0.6.1"
ktor = "3.0.0-rc-1"
materialKolor = "1.7.1"
markdownRenderer = "0.26.0"
mokkery = "2.3.0"
napier = "2.7.1"
serialization-json = "1.7.3"
settings = "1.2.0"
turbine = "1.1.0"

[libraries]
androidx-lifecycle-viewmodel = { group = "org.jetbrains.androidx.lifecycle", name = "lifecycle-viewmodel-compose", version.ref = "androidx-lifecycle" }
androidx-lifecycle-runtime-compose = { group = "org.jetbrains.androidx.lifecycle", name = "lifecycle-runtime-compose", version.ref = "androidx-lifecycle" }
androidx-navigation-compose = { group = "org.jetbrains.androidx.navigation", name = "navigation-compose", version.ref = "androidx-navigation" }
conveyor = { group = "dev.hydraulic.conveyor", name = "conveyor-control", version.ref = "conveyor" }

bugsnag = { group = "com.bugsnag", name="bugsnag", version.ref="bugsnag"}

koin-compose = { group = "io.insert-koin", name = "koin-compose", version.ref = "koin-compose" }
koin-compose-viewmodel = { group = "io.insert-koin", name = "koin-compose-viewmodel", version.ref = "koin-compose" }

kotlin-test = { module = "org.jetbrains.kotlin:kotlin-test", version.ref = "kotlin" }
kotlinx-coroutines-test = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "coroutines" }

kotlinx-coroutines-core = { group = "org.jetbrains.kotlinx", name = "kotlinx-coroutines-core", version.ref = "coroutines" }
kotlinx-coroutines-swing = { group = "org.jetbrains.kotlinx", name = "kotlinx-coroutines-swing", version.ref = "coroutines" }
kotlinx-datetime = { group = "org.jetbrains.kotlinx", name = "kotlinx-datetime", version.ref = "kotlinx-datetime" }
kotlinx-serialization-json = { group = "org.jetbrains.kotlinx", name = "kotlinx-serialization-json", version.ref = "serialization-json" }

ktor-client-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktor-client-okhttp = { module = "io.ktor:ktor-client-okhttp", version.ref = "ktor" }
ktor-content = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor" }
ktor-content-json = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }
ktor-logging = { module = "io.ktor:ktor-client-logging", version.ref = "ktor" }

markdownRenderer = { module = "com.mikepenz:multiplatform-markdown-renderer", version.ref = "markdownRenderer" }
markdownRenderer-m3 = { module = "com.mikepenz:multiplatform-markdown-renderer-m3", version.ref = "markdownRenderer" }

materialKolor = { module = "com.materialkolor:material-kolor", version.ref = "materialKolor" }
napier = { module = "io.github.aakira:napier", version.ref = "napier" }

settings = { group = "com.russhwolf", name = "multiplatform-settings-no-arg", version.ref = "settings" }
turbine = { group = "app.cash.turbine", name = "turbine", version.ref = "turbine" }

[plugins]
androidApplication = { id = "com.android.application", version.ref = "agp" }
buildKonfig = { id = "com.codingfeline.buildkonfig", version.ref = "buildKonfig" }
compose-compiler = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }
conveyor = { id = "dev.hydraulic.conveyor", version.ref = "conveyor-plugin" }
jetbrainsCompose = { id = "org.jetbrains.compose", version.ref = "compose-plugin" }
kotlinMultiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
kotlin-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
mokkery = { id = "dev.mokkery", version.ref = "mokkery" }
